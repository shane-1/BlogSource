{"remainingRequest":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\vuepress-plugin-mygitalk\\libs\\Gitalk.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\vuepress-plugin-mygitalk\\libs\\Gitalk.vue","mtime":499162500000},{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Gitalk.vue"],"names":[],"mappingsfile":"Gitalk.vue","sourceRoot":"node_modules/vuepress-plugin-mygitalk/libs","sourcesContent":["<template></template>\r\n\r\n<script>\r\nimport Gitalk from \"gitalk\";\r\nimport \"gitalk/dist/gitalk.css\";\r\nimport \"../styles/gitalk-plus.styl\";\r\n\r\n// mixin.js\r\nexport default {\r\n  computed: {\r\n    pluginConfig() {\r\n      return JSON.parse ? JSON.parse(pluginConfig) : pluginConfig;\r\n    },\r\n    data() {\r\n      return {\r\n        // 渲染的DOM元素id(使用)\r\n        elementName: this.pluginConfig.elementName,\r\n        // 最大重试次数\r\n        maxRetryCount: this.pluginConfig.maxRetryCount,\r\n        // 500毫秒执行一次check\r\n        defaultCheckMinutes: this.pluginConfig.defaultCheckMinutes\r\n      };\r\n    }\r\n  },\r\n  created() {},\r\n  created() {},\r\n  mounted() {\r\n    if (!this.pluginConfig.enable) {\r\n      return;\r\n    }\r\n    // 打印插件信息\r\n    this.plugin_log(\r\n      this.$myGitalkAppDescription +\r\n        \" ➡️ \" +\r\n        this.$myGitalkAppName +\r\n        \" ➡️ \" +\r\n        this.$myGitalkAppUrl\r\n    );\r\n    //console.log(\"1\" + document.querySelector(\".theme-container\"));\r\n    /** 初始化Gitalk */\r\n    /* this.$nextTick(function() {\r\n      console.log(document.querySelector(\".page\"));\r\n      this.initGitalk(this.$route);\r\n    }); */\r\n    this.$nextTick(() => {\r\n      // .page 里的Dom元素会重新加载2次，暂时没找到解决办法，只能延缓Gitalk执行\r\n      setTimeout(() => {\r\n        this.initGitalk(this.$route);\r\n      }, 2000);\r\n      //console.log(document.querySelector(\".page\"));\r\n    });\r\n    /* this.$router.beforeEach((to, from,next) => {\r\n      console.log(\"3\" + document.querySelector(\".theme-container\"));\r\n      next();\r\n    }); */\r\n    // 监听,当路由发生变化的时候执行\r\n    this.$router.afterEach((to, from) => {\r\n      this.$nextTick(function() {\r\n        //页面Dom加载完成后执行\r\n        if (to.path != from.path) {\r\n          // console.log(to.path)\r\n          this.initGitalk(to);\r\n        }\r\n      });\r\n    });\r\n  },\r\n  // 监听,当路由发生变化的时候执行\r\n  watch: {\r\n    /* $route: {\r\n      handler: function (to, from) {\r\n        this.$nextTick(function () { //页面加载完成后执行\r\n          console.log(location.href);\r\n          console.log(document.querySelector('.page'));\r\n        })\r\n      },\r\n      // 深度观察监听\r\n      deep: true\r\n    } */\r\n  },\r\n  updated() {},\r\n  methods: {\r\n    /* mounted:html加载完成后执行。执行顺序：子组件-父组件 */\r\n    /** 初始化Gitalk，因为组件加载顺序问题，第一次获取不到.page DOM元素.\r\n      暂时用setInterval函数解决. */\r\n    /**\r\n     * 延时触发初始化Gitalk\r\n     */\r\n    initGitalk(route) {\r\n      let pageElem = document.querySelector(\".page\");\r\n      // let pageElem = document.querySelector(\".page\");\r\n      // let pageElem = document.querySelector(\"#id\");\r\n      console.debug(this.$myGitalkAppName + \">>>>initGitalk\");\r\n      if (!pageElem) {\r\n        let retryCount = 0;\r\n        // 500毫秒执行一次check(() => 解决setTimeout、setInterval内this调用失效的解决办法)\r\n        // https://blog.csdn.net/aiyawei123/article/details/81867304\r\n        const timerCheckElem = setInterval(() => {\r\n          // 超过最大重试次数，直接退出\r\n          if (retryCount >= this.data.maxRetryCount) {\r\n            // 清除定时器\r\n            clearInterval(timerCheckElem);\r\n            return;\r\n          }\r\n          // 递增重试次数\r\n          retryCount++;\r\n          if (\r\n            this.pluginConfig.home &&\r\n            this.$page.frontmatter &&\r\n            this.$page.frontmatter.home\r\n          ) {\r\n            // 首页添加评论\r\n            let appElem = document.querySelector(\".theme-container\");\r\n            if (appElem) {\r\n              clearInterval(timerCheckElem);\r\n              this.loadGitalk(route, appElem);\r\n            }\r\n          } else {\r\n            //console.log(\"Gitalk check Dom()\")\r\n            pageElem = document.querySelector(\".page\");\r\n            if (pageElem) {\r\n              clearInterval(timerCheckElem);\r\n              this.loadGitalk(route, pageElem);\r\n            }\r\n          }\r\n        }, this.data.defaultCheckMinutes);\r\n      } else {\r\n        this.loadGitalk(route, pageElem);\r\n      }\r\n    },\r\n    /**\r\n     * 加载Gitalk\r\n     * @param {*} to\r\n     */\r\n    loadGitalk(to, elem) {\r\n      let commentsContainer = document.getElementById(this.data.elementName);\r\n      if (!commentsContainer) {\r\n        commentsContainer = document.createElement(\"div\");\r\n        commentsContainer.id = this.data.elementName;\r\n        commentsContainer.classList &&\r\n          commentsContainer.classList.add(\"content\");\r\n      } else {\r\n        // 清空DOM元素\r\n        commentsContainer.innerHTML = \"\";\r\n      }\r\n      const $page = !!elem ? elem : document.querySelector(\".page\");\r\n      //const $page = document.querySelector('.page');\r\n      if ($page) {\r\n        // FIXME (.page)第一次进入由于会刷新二次，所以第一次不显示\r\n        $page.appendChild(commentsContainer);\r\n        if (typeof Gitalk !== \"undefined\" && Gitalk instanceof Function) {\r\n          // FIXME Gitalk获取到的title是上一个页面的title，暂时这样解决\r\n          if (window && window.document) {\r\n            // 因为组件加载顺序问题，先执行的子组件。执行顺序：子组件-父组件\r\n            // @see packages\\@vuepress\\core\\lib\\client\\root-mixins\\updateMeta.js\r\n            // 最好别调用this.updateMeta() 只是为了让Gitalk能获取到实时`document.title`而已\r\n            // @see file `node_modules\\gitalk\\dist\\gitalk.js`,code `_this.options =`\r\n            //this.updateMeta()\r\n            window.document.title = this.$title;\r\n            //console.log(window.document.title);\r\n            //window.document.title = this.$page.title;\r\n            // @see packages\\@vuepress\\core\\lib\\node\\ClientComputedMixin.js\r\n            //console.log(this.$title);\r\n          }\r\n          // to.fullPath\r\n          //this.renderGitalk(this.$page.title || to.path);\r\n          this.renderGitalk(this.$title || this.$page.title || to.path);\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 渲染Gitalk\r\n     * @param {*} gitalkId\r\n     */\r\n    renderGitalk(gitalkId) {\r\n      // debug\r\n      //console.log(gitalkId)\r\n      // Name is too long (maximum is 50 characters)\r\n      if (typeof gitalkId === \"string\") {\r\n        gitalkId = gitalkId.length > 50 ? gitalkId.substr(0, 50) : gitalkId;\r\n      }\r\n      const gitalk = new Gitalk({\r\n        clientID: this.pluginConfig.gitalk.clientID,\r\n        // come from github development\r\n        clientSecret: this.pluginConfig.gitalk.clientSecret,\r\n        repo: this.pluginConfig.gitalk.repo,\r\n        // GitHub repository 所有者，可以是个人或者组织。\r\n        owner: this.pluginConfig.gitalk.owner,\r\n        // GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。\r\n        admin: !!this.pluginConfig.gitalk.admin\r\n          ? this.pluginConfig.gitalk.admin\r\n          : [this.pluginConfig.gitalk.owner],\r\n        id: gitalkId, // Ensure uniqueness and length less than 50 | 页面的唯一标识。长度必须小于50。\r\n        distractionFreeMode: false, // Facebook-like distraction free mode\r\n        language: !!this.pluginConfig.gitalk.language\r\n          ? this.pluginConfig.gitalk.language\r\n          : \"zh-CN\"\r\n      });\r\n      // console.log(gitalk)\r\n      //console.log(window.document.title)\r\n      gitalk.render(this.data.elementName);\r\n    },\r\n    // 统一输出日志\r\n    plugin_log(str = this.pluginConfig.pluginName) {\r\n      if (this.pluginConfig.log) {\r\n        console.log && console.log(str);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"stylus\"></style>"]}]}