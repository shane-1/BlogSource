{"remainingRequest":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\babel-loader\\lib\\index.js??ref--3-1!C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\vuepress-plugin-mygitalk\\libs\\Gitalk.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\vuepress-plugin-mygitalk\\libs\\Gitalk.vue","mtime":499162500000},{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000},{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\qq121\\Desktop\\doc\\Git\\Blog\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["Gitalk.vue"],"names":[],"mappings":"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","sourcesContent":["<template></template>\r\n\r\n<script>\r\nimport Gitalk from \"gitalk\";\r\nimport \"gitalk/dist/gitalk.css\";\r\nimport \"../styles/gitalk-plus.styl\";\r\n\r\n// mixin.js\r\nexport default {\r\n  computed: {\r\n    pluginConfig() {\r\n      return JSON.parse ? JSON.parse(pluginConfig) : pluginConfig;\r\n    },\r\n    data() {\r\n      return {\r\n        // 渲染的DOM元素id(使用)\r\n        elementName: this.pluginConfig.elementName,\r\n        // 最大重试次数\r\n        maxRetryCount: this.pluginConfig.maxRetryCount,\r\n        // 500毫秒执行一次check\r\n        defaultCheckMinutes: this.pluginConfig.defaultCheckMinutes\r\n      };\r\n    }\r\n  },\r\n  created() {},\r\n  created() {},\r\n  mounted() {\r\n    if (!this.pluginConfig.enable) {\r\n      return;\r\n    }\r\n    // 打印插件信息\r\n    this.plugin_log(\r\n      this.$myGitalkAppDescription +\r\n        \" ➡️ \" +\r\n        this.$myGitalkAppName +\r\n        \" ➡️ \" +\r\n        this.$myGitalkAppUrl\r\n    );\r\n    //console.log(\"1\" + document.querySelector(\".theme-container\"));\r\n    /** 初始化Gitalk */\r\n    /* this.$nextTick(function() {\r\n      console.log(document.querySelector(\".page\"));\r\n      this.initGitalk(this.$route);\r\n    }); */\r\n    this.$nextTick(() => {\r\n      // .page 里的Dom元素会重新加载2次，暂时没找到解决办法，只能延缓Gitalk执行\r\n      setTimeout(() => {\r\n        this.initGitalk(this.$route);\r\n      }, 2000);\r\n      //console.log(document.querySelector(\".page\"));\r\n    });\r\n    /* this.$router.beforeEach((to, from,next) => {\r\n      console.log(\"3\" + document.querySelector(\".theme-container\"));\r\n      next();\r\n    }); */\r\n    // 监听,当路由发生变化的时候执行\r\n    this.$router.afterEach((to, from) => {\r\n      this.$nextTick(function() {\r\n        //页面Dom加载完成后执行\r\n        if (to.path != from.path) {\r\n          // console.log(to.path)\r\n          this.initGitalk(to);\r\n        }\r\n      });\r\n    });\r\n  },\r\n  // 监听,当路由发生变化的时候执行\r\n  watch: {\r\n    /* $route: {\r\n      handler: function (to, from) {\r\n        this.$nextTick(function () { //页面加载完成后执行\r\n          console.log(location.href);\r\n          console.log(document.querySelector('.page'));\r\n        })\r\n      },\r\n      // 深度观察监听\r\n      deep: true\r\n    } */\r\n  },\r\n  updated() {},\r\n  methods: {\r\n    /* mounted:html加载完成后执行。执行顺序：子组件-父组件 */\r\n    /** 初始化Gitalk，因为组件加载顺序问题，第一次获取不到.page DOM元素.\r\n      暂时用setInterval函数解决. */\r\n    /**\r\n     * 延时触发初始化Gitalk\r\n     */\r\n    initGitalk(route) {\r\n      let pageElem = document.querySelector(\".page\");\r\n      // let pageElem = document.querySelector(\".page\");\r\n      // let pageElem = document.querySelector(\"#id\");\r\n      console.debug(this.$myGitalkAppName + \">>>>initGitalk\");\r\n      if (!pageElem) {\r\n        let retryCount = 0;\r\n        // 500毫秒执行一次check(() => 解决setTimeout、setInterval内this调用失效的解决办法)\r\n        // https://blog.csdn.net/aiyawei123/article/details/81867304\r\n        const timerCheckElem = setInterval(() => {\r\n          // 超过最大重试次数，直接退出\r\n          if (retryCount >= this.data.maxRetryCount) {\r\n            // 清除定时器\r\n            clearInterval(timerCheckElem);\r\n            return;\r\n          }\r\n          // 递增重试次数\r\n          retryCount++;\r\n          if (\r\n            this.pluginConfig.home &&\r\n            this.$page.frontmatter &&\r\n            this.$page.frontmatter.home\r\n          ) {\r\n            // 首页添加评论\r\n            let appElem = document.querySelector(\".theme-container\");\r\n            if (appElem) {\r\n              clearInterval(timerCheckElem);\r\n              this.loadGitalk(route, appElem);\r\n            }\r\n          } else {\r\n            //console.log(\"Gitalk check Dom()\")\r\n            pageElem = document.querySelector(\".page\");\r\n            if (pageElem) {\r\n              clearInterval(timerCheckElem);\r\n              this.loadGitalk(route, pageElem);\r\n            }\r\n          }\r\n        }, this.data.defaultCheckMinutes);\r\n      } else {\r\n        this.loadGitalk(route, pageElem);\r\n      }\r\n    },\r\n    /**\r\n     * 加载Gitalk\r\n     * @param {*} to\r\n     */\r\n    loadGitalk(to, elem) {\r\n      let commentsContainer = document.getElementById(this.data.elementName);\r\n      if (!commentsContainer) {\r\n        commentsContainer = document.createElement(\"div\");\r\n        commentsContainer.id = this.data.elementName;\r\n        commentsContainer.classList &&\r\n          commentsContainer.classList.add(\"content\");\r\n      } else {\r\n        // 清空DOM元素\r\n        commentsContainer.innerHTML = \"\";\r\n      }\r\n      const $page = !!elem ? elem : document.querySelector(\".page\");\r\n      //const $page = document.querySelector('.page');\r\n      if ($page) {\r\n        // FIXME (.page)第一次进入由于会刷新二次，所以第一次不显示\r\n        $page.appendChild(commentsContainer);\r\n        if (typeof Gitalk !== \"undefined\" && Gitalk instanceof Function) {\r\n          // FIXME Gitalk获取到的title是上一个页面的title，暂时这样解决\r\n          if (window && window.document) {\r\n            // 因为组件加载顺序问题，先执行的子组件。执行顺序：子组件-父组件\r\n            // @see packages\\@vuepress\\core\\lib\\client\\root-mixins\\updateMeta.js\r\n            // 最好别调用this.updateMeta() 只是为了让Gitalk能获取到实时`document.title`而已\r\n            // @see file `node_modules\\gitalk\\dist\\gitalk.js`,code `_this.options =`\r\n            //this.updateMeta()\r\n            window.document.title = this.$title;\r\n            //console.log(window.document.title);\r\n            //window.document.title = this.$page.title;\r\n            // @see packages\\@vuepress\\core\\lib\\node\\ClientComputedMixin.js\r\n            //console.log(this.$title);\r\n          }\r\n          // to.fullPath\r\n          //this.renderGitalk(this.$page.title || to.path);\r\n          this.renderGitalk(this.$title || this.$page.title || to.path);\r\n        }\r\n      }\r\n    },\r\n    /**\r\n     * 渲染Gitalk\r\n     * @param {*} gitalkId\r\n     */\r\n    renderGitalk(gitalkId) {\r\n      // debug\r\n      //console.log(gitalkId)\r\n      // Name is too long (maximum is 50 characters)\r\n      if (typeof gitalkId === \"string\") {\r\n        gitalkId = gitalkId.length > 50 ? gitalkId.substr(0, 50) : gitalkId;\r\n      }\r\n      const gitalk = new Gitalk({\r\n        clientID: this.pluginConfig.gitalk.clientID,\r\n        // come from github development\r\n        clientSecret: this.pluginConfig.gitalk.clientSecret,\r\n        repo: this.pluginConfig.gitalk.repo,\r\n        // GitHub repository 所有者，可以是个人或者组织。\r\n        owner: this.pluginConfig.gitalk.owner,\r\n        // GitHub repository 的所有者和合作者 (对这个 repository 有写权限的用户)。\r\n        admin: !!this.pluginConfig.gitalk.admin\r\n          ? this.pluginConfig.gitalk.admin\r\n          : [this.pluginConfig.gitalk.owner],\r\n        id: gitalkId, // Ensure uniqueness and length less than 50 | 页面的唯一标识。长度必须小于50。\r\n        distractionFreeMode: false, // Facebook-like distraction free mode\r\n        language: !!this.pluginConfig.gitalk.language\r\n          ? this.pluginConfig.gitalk.language\r\n          : \"zh-CN\"\r\n      });\r\n      // console.log(gitalk)\r\n      //console.log(window.document.title)\r\n      gitalk.render(this.data.elementName);\r\n    },\r\n    // 统一输出日志\r\n    plugin_log(str = this.pluginConfig.pluginName) {\r\n      if (this.pluginConfig.log) {\r\n        console.log && console.log(str);\r\n      }\r\n    }\r\n  }\r\n};\r\n</script>\r\n<style lang=\"stylus\"></style>"],"sourceRoot":"node_modules/vuepress-plugin-mygitalk/libs"}]}