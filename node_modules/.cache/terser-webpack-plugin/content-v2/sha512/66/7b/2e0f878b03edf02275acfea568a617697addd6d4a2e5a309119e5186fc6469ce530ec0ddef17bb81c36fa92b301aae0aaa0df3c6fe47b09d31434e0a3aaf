{"code":"(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{462:function(s,a,t){\"use strict\";t.r(a);var n=t(28),e=Object(n.a)({},(function(){var s=this,a=s.$createElement,t=s._self._c||a;return t(\"ContentSlotsDistributor\",{attrs:{\"slot-key\":s.$parent.slotKey}},[t(\"h1\",{attrs:{id:\"spring\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#spring\"}},[s._v(\"#\")]),s._v(\" Spring\")]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"基于5.0+\")])]),s._v(\" \"),t(\"hr\"),s._v(\" \"),t(\"h2\",{attrs:{id:\"简介\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#简介\"}},[s._v(\"#\")]),s._v(\" 简介\")]),s._v(\" \"),t(\"p\",[s._v(\"Spring : 春天 ---\\x3e给软件行业带来了春天\")]),s._v(\" \"),t(\"p\",[s._v(\"2002年，Rod Jahnson首次推出了Spring框架雏形\"),t(\"strong\",[s._v(\"interface21\")]),s._v(\"框架。\")]),s._v(\" \"),t(\"p\",[s._v(\"2004年3月24日，Spring框架以interface21框架为基础，经过重新设计，发布了1.0正式版。\")]),s._v(\" \"),t(\"p\",[s._v(\"很难想象Rod Johnson的学历 , 他是悉尼大学的博士，然而他的专业不是计算机，而是音乐学。\")]),s._v(\" \"),t(\"p\",[s._v(\"Spring理念 : 使现有技术更加实用 . 本身就是一个大杂烩 , 整合现有的框架技术\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"p\",[s._v(\"官网 : http://spring.io/\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"官方下载地址 : https://repo.spring.io/libs-release-local/org/springframework/spring/\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"GitHub : https://github.com/spring-projects\")])])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"优点\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#优点\"}},[s._v(\"#\")]),s._v(\" 优点\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[t(\"p\",[s._v(\"Spring是一个开源免费的框架 , 容器  .\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"Spring是一个轻量级的框架 , 非侵入式的 .\")])]),s._v(\" \"),t(\"li\",[t(\"p\",[t(\"strong\",[s._v(\"控制反转 IoC  , 面向切面 Aop\")])])]),s._v(\" \"),t(\"li\",[t(\"p\",[s._v(\"对事物的支持 , 对框架的支持\")])])]),s._v(\" \"),t(\"p\",[s._v(\"......\")]),s._v(\" \"),t(\"p\",[s._v(\"一句话概括：\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"Spring是一个轻量级的控制反转(IoC)和面向切面(AOP)的容器（框架）。\")])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"组成\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#组成\"}},[s._v(\"#\")]),s._v(\" 组成\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"/images/2020-10-15-09-07-01.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"Spring 框架是一个分层架构，由 7 个定义良好的模块组成。Spring 模块构建在核心容器之上，核心容器定义了创建、配置和管理 bean 的方式 .\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"/images/2020-10-15-09-08-52.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"组成 Spring 框架的每个模块（或组件）都可以单独存在，或者与其他一个或多个模块联合实现。每个模块的功能如下：\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"核心容器\")]),s._v(\"：核心容器提供 Spring 框架的基本功能。核心容器的主要组件是BeanFactory，它是工厂模式的实现。BeanFactory 使用\"),t(\"em\",[s._v(\"控制反转\")]),s._v(\"（IOC） 模式将应用程序的配置和依赖性规范与实际的应用程序代码分开。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"Spring 上下文\")]),s._v(\"：Spring 上下文是一个配置文件，向 Spring 框架提供上下文信息。Spring 上下文包括企业服务，例如 JNDI、EJB、电子邮件、国际化、校验和调度功能。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"Spring AOP\")]),s._v(\"：通过配置管理特性，Spring AOP 模块直接将面向切面的编程功能 , 集成到了 Spring 框架中。所以，可以很容易地使 Spring 框架管理任何支持 AOP的对象。Spring AOP 模块为基于 Spring 的应用程序中的对象提供了事务管理服务。通过使用 Spring AOP，不用依赖组件，就可以将声明性事务管理集成到应用程序中。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"Spring DAO\")]),s._v(\"：JDBC DAO 抽象层提供了有意义的异常层次结构，可用该结构来管理异常处理和不同数据库供应商抛出的错误消息。异常层次结构简化了错误处理，并且极大地降低了需要编写的异常代码数量（例如打开和关闭连接）。Spring DAO 的面向 JDBC 的异常遵从通用的 DAO 异常层次结构。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"Spring ORM\")]),s._v(\"：Spring 框架插入了若干个 ORM 框架，从而提供了 ORM 的对象关系工具，其中包括 JDO、Hibernate 和 iBatis SQL Map。所有这些都遵从 Spring 的通用事务和 DAO 异常层次结构。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"Spring Web 模块\")]),s._v(\"：Web 上下文模块建立在应用程序上下文模块之上，为基于 Web 的应用程序提供了上下文。所以，Spring 框架支持与 Jakarta Struts 的集成。Web 模块还简化了处理多部分请求以及将请求参数绑定到域对象的工作。\")]),s._v(\" \"),t(\"li\",[t(\"strong\",[s._v(\"Spring MVC 框架\")]),s._v(\"：MVC 框架是一个全功能的构建 Web 应用程序的 MVC 实现。通过策略接口，MVC 框架变成为高度可配置的，MVC 容纳了大量视图技术，其中包括 JSP、Velocity、Tiles、iText 和 POI。\")])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"拓展\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#拓展\"}},[s._v(\"#\")]),s._v(\" 拓展\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"Spring Boot与Spring Cloud\")])]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"Spring Boot 是 Spring 的一套快速配置脚手架，可以基于Spring Boot 快速开发单个微服务;\")]),s._v(\" \"),t(\"li\",[s._v(\"Spring Cloud是基于Spring Boot实现的；\")]),s._v(\" \"),t(\"li\",[s._v(\"Spring Boot专注于快速、方便集成的单个微服务个体，Spring Cloud关注全局的服务治理框架；\")]),s._v(\" \"),t(\"li\",[s._v(\"Spring Boot使用了约束优于配置的理念，很多集成方案已经帮你选择好了，能不配置就不配置 , Spring Cloud很大的一部分是基于Spring Boot来实现，Spring Boot可以离开Spring Cloud独立使用开发项目，但是Spring Cloud离不开Spring Boot，属于依赖的关系。\")]),s._v(\" \"),t(\"li\",[s._v(\"SpringBoot在SpringClound中起到了承上启下的作用，如果你要学习SpringCloud必须要学习SpringBoot。\")])]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"/images/2020-10-15-09-12-18.png\",alt:\"\"}})]),s._v(\" \"),t(\"h2\",{attrs:{id:\"ioc原理\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ioc原理\"}},[s._v(\"#\")]),s._v(\" IOC原理\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"h4\",{attrs:{id:\"原始实现\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#原始实现\"}},[s._v(\"#\")]),s._v(\" 原始实现\")])])]),s._v(\" \"),t(\"ol\",[t(\"li\",[s._v(\"先写Dao接口及其实现\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language-java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"interface\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDao\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDaoImpl\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"implements\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDao\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Defult User~\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDaoMysqlImpl\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"implements\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDao\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Mysql User~\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),t(\"p\",[s._v(\"2.再写service接口及其实现去调用Dao\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"interface\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserService\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserServiceImpl\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"implements\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserService\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"private\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDao\")]),s._v(\" userDao \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDaoImpl\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        userDao\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),t(\"p\",[s._v(\"3.用户调用service相关方法\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"MyTest\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"static\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"main\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" args\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//用户实际调用\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserService\")]),s._v(\" userService \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserServiceImpl\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        userService\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \\n\")])])]),t(\"p\",[s._v(\"那么我们要使用Mysql , 又需要去service实现类里面修改对应的实现 . 假设我们的这种需求非常大 , 这种方式就根本不适用了, 甚至反人类对吧 , 每次变动 , 都需要修改大量代码 . 这种设计的耦合性太高了, 牵一发而动全身 .\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"那我们如何去解决呢 ?\")])]),s._v(\" \"),t(\"p\",[s._v(\"我们可以在需要用到他的地方 , 不去实现它 , 而是留出一个接口 , 利用set , 我们去代码里修改下 .\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[t(\"h3\",{attrs:{id:\"通过反转优化实现\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#通过反转优化实现\"}},[s._v(\"#\")]),s._v(\" 通过反转优化实现:\")])])]),s._v(\" \"),t(\"div\",{staticClass:\"language-java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"interface\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDao\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDaoImpl\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"implements\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDao\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Defult User~\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDaoMysqlImpl\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"implements\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDao\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"System\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"out\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"println\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token string\"}},[s._v('\"Mysql User~\"')]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),t(\"div\",{staticClass:\"language-java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"interface\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserService\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserServiceImpl\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"implements\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserService\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"private\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDao\")]),s._v(\" userDao\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"setUserDao\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDao\")]),s._v(\" userDao\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"this\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),s._v(\"userDao \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" userDao\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        userDao\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\")])])]),t(\"p\",[s._v(\"测试\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-java extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-java\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"class\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"MyTest\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"public\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"static\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"void\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"main\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"String\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"[\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"]\")]),s._v(\" args\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"{\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token comment\"}},[s._v(\"//用户实际调用\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserService\")]),s._v(\" userService \"),t(\"span\",{pre:!0,attrs:{class:\"token operator\"}},[s._v(\"=\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserServiceImpl\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserServiceImpl\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),s._v(\"userService\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"setUserDao\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token keyword\"}},[s._v(\"new\")]),s._v(\" \"),t(\"span\",{pre:!0,attrs:{class:\"token class-name\"}},[s._v(\"UserDaoMysqlImpl\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n        sserService\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\".\")]),t(\"span\",{pre:!0,attrs:{class:\"token function\"}},[s._v(\"getUser\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"(\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\")\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\";\")]),s._v(\"\\n    \"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"}\")]),s._v(\"\\n    \\n\")])])]),t(\"ul\",[t(\"li\",[t(\"strong\",[s._v(\"使用set注入优化后,程序不再具有主动性,变为被动接受用户对象\")])])]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"以上的代码仅为IOC思想的简单体现,实际框架不会使用这种静态创建,而采用反射机制\")])]),s._v(\" \"),t(\"p\",[s._v(\"以前所有东西都是由程序去进行控制创建 , 而现在是由我们自行控制创建对象 , 把主动权交给了调用者 . 程序不用去管怎么创建,怎么实现了 . 它只负责提供一个接口 .\")]),s._v(\" \"),t(\"p\",[s._v(\"这种思想 , 从本质上解决了问题 , 我们程序员不再去管理对象的创建了 , 更多的去关注业务的实现 . 耦合性大大降低 . 这也就是IOC的原型 !\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"ioc本质\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ioc本质\"}},[s._v(\"#\")]),s._v(\" IOC本质\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"控制反转IoC(Inversion of Control)，是一种设计思想，DI(依赖注入)是实现IoC的一种方法\")]),s._v(\"，也有人认为DI只是IoC的另一种说法。没有IoC的程序中 , 我们使用面向对象编程 , 对象的创建与对象间的依赖关系完全硬编码在程序中，对象的创建由程序自己控制，控制反转后将对象的创建转移给第三方，个人认为所谓控制反转就是：获得依赖对象的方式反转了。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"/images/2020-10-15-13-25-02.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"IoC是Spring框架的核心内容\")]),s._v(\"，使用多种方式完美的实现了IoC，可以使用XML配置，也可以使用注解，新版本的Spring也可以零配置实现IoC。\")]),s._v(\" \"),t(\"p\",[s._v(\"Spring容器在初始化时先读取配置文件，根据配置文件或元数据创建与组织对象存入容器中，程序使用时再从Ioc容器中取出需要的对象。\")]),s._v(\" \"),t(\"p\",[t(\"img\",{attrs:{src:\"/images/2020-10-15-13-31-16.png\",alt:\"\"}})]),s._v(\" \"),t(\"p\",[s._v(\"采用XML方式配置Bean的时候，Bean的定义信息是和实现分离的，而采用注解的方式可以把两者合为一体，Bean的定义信息直接以注解的形式定义在实现类中，从而达到了零配置的目的。\")]),s._v(\" \"),t(\"p\",[t(\"strong\",[s._v(\"控制反转是一种通过描述（XML或注解）并通过第三方去生产或获取特定对象的方式。在Spring中实现控制反转的是IoC容器，其实现方法是依赖注入（Dependency Injection,DI）。\")])]),s._v(\" \"),t(\"h2\",{attrs:{id:\"hellospring\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#hellospring\"}},[s._v(\"#\")]),s._v(\" HelloSpring\")]),s._v(\" \"),t(\"h3\",{attrs:{id:\"导入jar包\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#导入jar包\"}},[s._v(\"#\")]),s._v(\" 导入Jar包\")]),s._v(\" \"),t(\"p\",[s._v(\"注 : spring 需要导入commons-logging进行日志记录 . 我们利用maven , 他会自动下载对应的依赖项 .\")]),s._v(\" \"),t(\"div\",{staticClass:\"language-xml extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-xml\"}},[t(\"code\",[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"dependency\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"groupId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"org.springframework\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"groupId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"artifactId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"spring-webmvc\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"artifactId\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n   \"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"<\")]),s._v(\"version\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"5.1.10.RELEASE\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"version\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n\"),t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token tag\"}},[t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\"</\")]),s._v(\"dependency\")]),t(\"span\",{pre:!0,attrs:{class:\"token punctuation\"}},[s._v(\">\")])]),s._v(\"\\n\")])])]),t(\"h3\",{attrs:{id:\"编写代码\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#编写代码\"}},[s._v(\"#\")]),s._v(\" 编写代码\")]),s._v(\" \"),t(\"ol\",[t(\"li\",[s._v(\"编写一个Hello实体类\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('public class Hello {\\n   private String name;\\n\\n   public String getName() {\\n       return name;\\n  }\\n   public void setName(String name) {\\n       this.name = name;\\n  }\\n\\n   public void show(){\\n       System.out.println(\"Hello,\"+ name );\\n  }\\n}\\n')])])]),t(\"ol\",{attrs:{start:\"2\"}},[t(\"li\",[s._v(\"编写我们的spring文件 , 这里我们命名为beans.xml\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\\n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans\\n       http://www.springframework.org/schema/beans/spring-beans.xsd\">\\n\\n   \\x3c!--bean就是java对象 , 由Spring创建和管理--\\x3e\\n   <bean id=\"hello\" class=\"com.kuang.pojo.Hello\">\\n       <property name=\"name\" value=\"Spring\"/>\\n   </bean>\\n\\n</beans>\\n')])])]),t(\"ol\",{attrs:{start:\"3\"}},[t(\"li\",[s._v(\"我们可以去进行测试了 .\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('@Test\\npublic void test(){\\n   //解析beans.xml文件 , 生成管理相应的Bean对象\\n   ApplicationContext context = new ClassPathXmlApplicationContext(\"beans.xml\");\\n   //getBean : 参数即为spring配置文件中bean的id .\\n   Hello hello = (Hello) context.getBean(\"hello\");\\n   hello.show();\\n}\\n')])])]),t(\"h3\",{attrs:{id:\"思考\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#思考\"}},[s._v(\"#\")]),s._v(\" 思考\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"Hello 对象是谁创建的 ?  【hello 对象是由Spring创建的\")]),s._v(\" \"),t(\"li\",[s._v(\"Hello 对象的属性是怎么设置的 ?  hello 对象的属性是由Spring容器设置的\")])]),s._v(\" \"),t(\"p\",[s._v(\"这个过程就叫控制反转 :\")]),s._v(\" \"),t(\"ul\",[t(\"li\",[s._v(\"控制 : 谁来控制对象的创建 , 传统应用程序的对象是由程序本身控制创建的 , 使用Spring后 , 对象是由Spring来创建的\")]),s._v(\" \"),t(\"li\",[s._v(\"反转 : 程序本身不创建对象 , 而变成被动的接收对象 .\")])]),s._v(\" \"),t(\"p\",[s._v(\"依赖注入 : 就是利用set方法来进行注入的.\")]),s._v(\" \"),t(\"p\",[s._v(\"IOC是一种编程思想，由主动的编程变成被动的接收\")]),s._v(\" \"),t(\"p\",[s._v(\"可以通过newClassPathXmlApplicationContext去浏览一下底层源码 .\")]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"修改案例一\")])]),s._v(\" \"),t(\"p\",[s._v(\"我们在案例一中， 新增一个Spring配置文件beans.xml\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\\n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans\\n       http://www.springframework.org/schema/beans/spring-beans.xsd\">\\n\\n   <bean id=\"MysqlImpl\" class=\"com.kuang.dao.impl.UserDaoMySqlImpl\"/>\\n   <bean id=\"OracleImpl\" class=\"com.kuang.dao.impl.UserDaoOracleImpl\"/>\\n\\n   <bean id=\"ServiceImpl\" class=\"com.kuang.service.impl.UserServiceImpl\">\\n       \\x3c!--注意: 这里的name并不是属性 , 而是set方法后面的那部分 , 首字母小写--\\x3e\\n       \\x3c!--引用另外一个bean , 不是用value 而是用 ref--\\x3e\\n       <property name=\"userDao\" ref=\"OracleImpl\"/>\\n   </bean>\\n\\n</beans>\\n')])])]),t(\"p\",[s._v(\"测试！\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('@Test\\npublic void test2(){\\n   ApplicationContext context = new ClassPathXmlApplicationContext(\"beans.xml\");\\n   UserServiceImpl serviceImpl = (UserServiceImpl) context.getBean(\"ServiceImpl\");\\n   serviceImpl.getUser();\\n}\\n')])])]),t(\"p\",[s._v(\"OK , 到了现在 , 我们彻底不用再程序中去改动了 , 要实现不同的操作 , 只需要在xml配置文件中进行修改 , 所谓的IoC,一句话搞定 : 对象由Spring 来创建 , 管理 , 装配 !\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"ioc创建对象方式\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#ioc创建对象方式\"}},[s._v(\"#\")]),s._v(\" IOC创建对象方式\")]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"通过无参构造方法来创建\")])]),s._v(\" \"),t(\"p\",[s._v(\"1、User.java\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('public class User {\\n\\n   private String name;\\n\\n   public User() {\\n       System.out.println(\"user无参构造方法\");\\n  }\\n\\n   public void setName(String name) {\\n       this.name = name;\\n  }\\n\\n   public void show(){\\n       System.out.println(\"name=\"+ name );\\n  }\\n\\n}\\n')])])]),t(\"p\",[s._v(\"2、beans.xml\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('<?xml version=\"1.0\" encoding=\"UTF-8\"?>\\n<beans xmlns=\"http://www.springframework.org/schema/beans\"\\n      xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\"\\n      xsi:schemaLocation=\"http://www.springframework.org/schema/beans\\n       http://www.springframework.org/schema/beans/spring-beans.xsd\">\\n\\n   <bean id=\"user\" class=\"com.kuang.pojo.User\">\\n       <property name=\"name\" value=\"kuangshen\"/>\\n   </bean>\\n\\n</beans>\\n')])])]),t(\"p\",[s._v(\"3、测试类\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('@Test\\npublic void test(){\\n   ApplicationContext context = new ClassPathXmlApplicationContext(\"beans.xml\");\\n   //在执行getBean的时候, user已经创建好了 , 通过无参构造\\n   User user = (User) context.getBean(\"user\");\\n   //调用对象的方法 .\\n   user.show();\\n}\\n')])])]),t(\"p\",[s._v(\"结果可以发现，在调用show方法之前，User对象已经通过无参构造初始化了！\")]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"通过有参构造方法来创建\")])]),s._v(\" \"),t(\"p\",[s._v(\"1、UserT . java\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('public class UserT {\\n\\n   private String name;\\n\\n   public UserT(String name) {\\n       this.name = name;\\n  }\\n\\n   public void setName(String name) {\\n       this.name = name;\\n  }\\n\\n   public void show(){\\n       System.out.println(\"name=\"+ name );\\n  }\\n\\n}\\n')])])]),t(\"p\",[s._v(\"2、beans.xml 有三种方式编写\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('\\x3c!-- 第一种根据index参数下标设置 --\\x3e\\n<bean id=\"userT\" class=\"com.kuang.pojo.UserT\">\\n   \\x3c!-- index指构造方法 , 下标从0开始 --\\x3e\\n   <constructor-arg index=\"0\" value=\"kuangshen2\"/>\\n</bean>\\n\\x3c!-- 第二种根据参数名字设置 --\\x3e\\n<bean id=\"userT\" class=\"com.kuang.pojo.UserT\">\\n   \\x3c!-- name指参数名 --\\x3e\\n   <constructor-arg name=\"name\" value=\"kuangshen2\"/>\\n</bean>\\n\\x3c!-- 第三种根据参数类型设置 --\\x3e\\n<bean id=\"userT\" class=\"com.kuang.pojo.UserT\">\\n   <constructor-arg type=\"java.lang.String\" value=\"kuangshen2\"/>\\n</bean>\\n')])])]),t(\"p\",[s._v(\"3、测试\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('@Test\\npublic void testT(){\\n   ApplicationContext context = new ClassPathXmlApplicationContext(\"beans.xml\");\\n   UserT user = (UserT) context.getBean(\"userT\");\\n   user.show();\\n}\\n')])])]),t(\"p\",[s._v(\"结论：在配置文件加载的时候。其中管理的对象都已经初始化了！\")]),s._v(\" \"),t(\"h2\",{attrs:{id:\"spring配置\"}},[t(\"a\",{staticClass:\"header-anchor\",attrs:{href:\"#spring配置\"}},[s._v(\"#\")]),s._v(\" Spring配置\")]),s._v(\" \"),t(\"blockquote\",[t(\"p\",[s._v(\"别名\")])]),s._v(\" \"),t(\"p\",[s._v(\"alias 设置别名 , 为bean设置别名 , 可以设置多个别名\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('\\x3c!--设置别名：在获取Bean的时候可以使用别名获取--\\x3e\\n<alias name=\"userT\" alias=\"userNew\"/>\\n')])])]),t(\"blockquote\",[t(\"p\",[s._v(\"Bean的配置\")])]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('\\x3c!--bean就是java对象,由Spring创建和管理--\\x3e\\n\\n\\x3c!--\\n   id 是bean的标识符,要唯一,如果没有配置id,name就是默认标识符\\n   如果配置id,又配置了name,那么name是别名\\n   name可以设置多个别名,可以用逗号,分号,空格隔开\\n   如果不配置id和name,可以根据applicationContext.getBean(.class)获取对象;\\n\\nclass是bean的全限定名=包名+类名\\n--\\x3e\\n<bean id=\"hello\" name=\"hello2 h2,h3;h4\" class=\"com.kuang.pojo.Hello\">\\n   <property name=\"name\" value=\"Spring\"/>\\n</bean>\\n')])])]),t(\"blockquote\",[t(\"p\",[s._v(\"import\")])]),s._v(\" \"),t(\"p\",[s._v(\"团队的合作通过import来实现 .\")]),s._v(\" \"),t(\"div\",{staticClass:\"language- extra-class\"},[t(\"pre\",{pre:!0,attrs:{class:\"language-text\"}},[t(\"code\",[s._v('<import resource=\"{path}/beans.xml\"/>\\n')])])])])}),[],!1,null,null,null);a.default=e.exports}}]);","extractedComments":[]}